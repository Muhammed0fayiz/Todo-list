<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>To-do List</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .todo-box {
      border: 1px solid #ccc;
      padding: 20px;
      width: 50%;
      margin: 30px auto;
      border-radius: 8px;
      background-color: #f8f9fa;
    }
    .task-btns button {
      margin-left: 5px;
    }
  </style>
</head>
<body>

<div class="todo-box text-center">
  <h1 class="mb-3 text-primary bg-warning py-2">To-do List</h1>

  <!-- Task list -->
  <ul id="taskList" class="list-group mb-3"></ul>

  <!-- Input row -->
  <div class="d-flex justify-content-center gap-2">
    <input type="text" id="taskInput" class="form-control w-50" placeholder="Enter task">
    <button id="addBtn" class="btn btn-primary">Add</button>
  </div>
</div>

<script>
const taskInput = document.getElementById('taskInput')
const addBtn = document.getElementById('addBtn')
const taskList = document.getElementById('taskList')


let allTask = JSON.parse(localStorage.getItem('tasks')) || []


function renderTasks() {
  taskList.innerHTML = ''
  allTask.forEach((task, index) => {
    const li = document.createElement('li')
    li.className = 'list-group-item d-flex justify-content-between align-items-center'

    // Task text
    const span = document.createElement('span')
    span.textContent = task
    li.appendChild(span)

    // Buttons container
    const btnContainer = document.createElement('div')
    btnContainer.className = 'task-btns'

    // Edit button
    const editBtn = document.createElement('button')
    editBtn.className = 'btn btn-warning btn-sm'
    editBtn.textContent = 'Edit'
    editBtn.addEventListener('click', () => {
      const newTask = prompt('Edit your task:', task)
      if (newTask !== null && newTask.trim() !== '') {
        allTask[index] = newTask.trim()
        localStorage.setItem('tasks', JSON.stringify(allTask))
        renderTasks()
      }
    })
    btnContainer.appendChild(editBtn)

    // Delete button
    const deleteBtn = document.createElement('button')
    deleteBtn.className = 'btn btn-danger btn-sm'
    deleteBtn.textContent = 'Delete'
    deleteBtn.addEventListener('click', () => {
      allTask.splice(index, 1)
      localStorage.setItem('tasks', JSON.stringify(allTask))
      renderTasks()
    })
    btnContainer.appendChild(deleteBtn)

    li.appendChild(btnContainer)
    taskList.appendChild(li)
  })
}

// Initial render
renderTasks()

// Add new task
addBtn.addEventListener('click', () => {
  const taskText = taskInput.value.trim()
  if(taskText !== '') {
    allTask.push(taskText)
    localStorage.setItem('tasks', JSON.stringify(allTask))
    taskInput.value = ''
    renderTasks()
  }
})
</script>

</body>
</html>
